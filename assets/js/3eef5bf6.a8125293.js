"use strict";(self.webpackChunkStatescope=self.webpackChunkStatescope||[]).push([[8039],{3361:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"processed-signatures","title":"Processed Signatures","description":"This page hosts our in-house single-cell RNA (scRNA) signatures for various applications. Below, you will find details about the processed signatures, including their source, cell type information, gene count, and download links.","source":"@site/docs/processed-signatures.md","sourceDirName":".","slug":"/processed-signatures","permalink":"/docs/processed-signatures","draft":false,"unlisted":false,"editUrl":"https://github.com/tgac-vumc/Statescopeweb.git/docs/processed-signatures.md","tags":[],"version":"current","frontMatter":{"id":"processed-signatures","title":"Processed Signatures"}}');var r=n(4848),t=n(8453);const l={id:"processed-signatures",title:"Processed Signatures"},d="Processed Signatures",o={},c=[{value:"Available Signatures",id:"available-signatures",level:2},{value:"Signature File Contents",id:"signature-file-contents",level:2},{value:"How to Use",id:"how-to-use",level:3},{value:"Notes",id:"notes",level:2}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"processed-signatures",children:"Processed Signatures"})}),"\n",(0,r.jsx)(s.p,{children:"This page hosts our in-house single-cell RNA (scRNA) signatures for various applications. Below, you will find details about the processed signatures, including their source, cell type information, gene count, and download links."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"available-signatures",children:"Available Signatures"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Dataset"}),(0,r.jsx)(s.th,{children:"Level"}),(0,r.jsx)(s.th,{children:"Number of Cell Types"}),(0,r.jsx)(s.th,{children:"Key Cell Types"}),(0,r.jsx)(s.th,{children:"Total Genes"}),(0,r.jsx)(s.th,{children:"Source"}),(0,r.jsx)(s.th,{children:"Download"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Lung Cancer Signature"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Level 1 (Major)"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Placeholder"})}),(0,r.jsx)(s.td,{children:"Epithelial, Immune, Stromal"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Placeholder"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://figshare.com/placeholder",children:"Figshare"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)("a",{href:"https://figshare.com/placeholder",download:!0,class:"download-button",children:"Download"})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Level 2 (Subtypes)"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Placeholder"})}),(0,r.jsx)(s.td,{children:"Basal, Luminal, T Cells, Fibroblasts"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Placeholder"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://figshare.com/placeholder",children:"Figshare"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Level 3 (Detailed)"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Placeholder"})}),(0,r.jsx)(s.td,{children:"CD4+ T cells, CD8+ T cells, CAFs"}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Placeholder"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"https://figshare.com/placeholder",children:"Figshare"})}),(0,r.jsx)(s.td,{})]})]})]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"signature-file-contents",children:"Signature File Contents"}),"\n",(0,r.jsxs)(s.p,{children:["Each signature file is provided in a ",(0,r.jsx)(s.strong,{children:"pickle format"})," (",(0,r.jsx)(s.code,{children:".pickle"}),") and contains the following data:"]}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Gene-Level Statistics:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Mean Expression:"})," Average gene expression values across all cells for each cell type."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Variance:"})," Variability in expression for each gene across cells."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Standard Deviation:"})," Standard deviation of gene expression for each gene within each cell type."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Gene Lists:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Total Genes:"})," The total number of genes included in the dataset."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Highly Variable Genes (HVGs):"})," Genes identified as highly variable, which contribute significantly to the analysis."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Differentially Expressed Genes (DEGs):"})," Genes selected by ",(0,r.jsx)(s.strong,{children:"AutoGenes"}),", including the number of DEGs identified."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Cell Types:"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"A complete list of cell types present in the dataset, organized by hierarchical levels (e.g., major, subtype, detailed)."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"how-to-use",children:"How to Use"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Select the desired signature from the table above."}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Click the ",(0,r.jsx)(s.strong,{children:"Download"})," button to access the file."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Use the appropriate level based on your analysis requirements:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Level 1 (Major):"})," Broad categories of cell types."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Level 2 (Subtypes):"})," Subdivisions within major categories."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Level 3 (Detailed):"})," Detailed classification of cell types."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Refer to the [Tutorial] for guidance on using these signatures in your workflows."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.strong,{children:"pickle file"})," is Python-compatible. Users of other programming environments (e.g., R) may need to convert the file using a Python script."]}),"\n",(0,r.jsx)(s.li,{children:"Ensure that gene identifiers in the signature match those in your bulk RNA-seq data to avoid discrepancies during analysis."}),"\n",(0,r.jsx)(s.li,{children:"This page will be regularly updated as new signatures are added. If you have feedback or specific requests, please contact us."}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Feedback:"})," For specific datasets or additional levels of detail, please reach out to our team through the contact form on the main site."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>d});var i=n(6540);const r={},t=i.createContext(r);function l(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);