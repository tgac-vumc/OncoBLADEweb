"use strict";(self.webpackChunkStatescope=self.webpackChunkStatescope||[]).push([[2782],{7997:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"input","title":"Input Arguments","description":"This page outlines the required inputs and optional parameters for running OncoBLADE.","source":"@site/docs/input.md","sourceDirName":".","slug":"/input","permalink":"/docs/input","draft":false,"unlisted":false,"editUrl":"https://github.com/tgac-vumc/Statescopeweb.git/docs/input.md","tags":[],"version":"current","frontMatter":{"id":"input","title":"Input Arguments","sidebar_label":"Input Arguments"},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/docs/installation"},"next":{"title":"Python","permalink":"/docs/python"}}');var i=s(4848),l=s(8453);const t={id:"input",title:"Input Arguments",sidebar_label:"Input Arguments"},a="Input Arguments",c={},d=[{value:"Required Datasets",id:"required-datasets",level:2},{value:"1. Signature Matrices",id:"1-signature-matrices",level:3},{value:"2. Bulk Gene Expression Data",id:"2-bulk-gene-expression-data",level:3},{value:"3. Expected Cell Fractions (Optional)",id:"3-expected-cell-fractions-optional",level:3},{value:"Options for Reference RNA-seq Data",id:"options-for-reference-rna-seq-data",level:2},{value:"Accepted Input Formats",id:"accepted-input-formats",level:2},{value:"<strong>Bulk Data</strong>",id:"bulk-data",level:3},{value:"<strong>Single-cell Data for Signature Creation</strong>",id:"single-cell-data-for-signature-creation",level:3},{value:"Model Hyperparameters",id:"model-hyperparameters",level:2}];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"input-arguments",children:"Input Arguments"})}),"\n",(0,i.jsxs)(n.p,{children:["This page outlines the required inputs and optional parameters for running ",(0,i.jsx)(n.strong,{children:"OncoBLADE"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"required-datasets",children:"Required Datasets"}),"\n",(0,i.jsx)(n.h3,{id:"1-signature-matrices",children:"1. Signature Matrices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"X"}),": An ",(0,i.jsx)(n.em,{children:"Ngene"})," by ",(0,i.jsx)(n.em,{children:"Ncell"})," matrix containing average gene expression profiles per cell type (a signature matrix) in ",(0,i.jsx)(n.strong,{children:"log-scale"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"stdX"}),": An ",(0,i.jsx)(n.em,{children:"Ngene"})," by ",(0,i.jsx)(n.em,{children:"Ncell"})," matrix containing standard deviation per gene per cell type (a signature matrix of gene expression variability)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-bulk-gene-expression-data",children:"2. Bulk Gene Expression Data"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Y"}),": An ",(0,i.jsx)(n.em,{children:"Ngene"})," by ",(0,i.jsx)(n.em,{children:"Nsample"})," matrix containing bulk gene expression data. This should be in ",(0,i.jsx)(n.strong,{children:"linear-scale"})," data without log-transformation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-expected-cell-fractions-optional",children:"3. Expected Cell Fractions (Optional)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Expectation"}),": An ",(0,i.jsx)(n.em,{children:"Nsample"})," by ",(0,i.jsx)(n.em,{children:"Ncell"})," matrix containing the expected cell fractions used to inform ",(0,i.jsx)(n.strong,{children:"OncoBLADE"})," (optional)."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"options-for-reference-rna-seq-data",children:"Options for Reference RNA-seq Data"}),"\n",(0,i.jsx)(n.p,{children:"Users have two options for obtaining signature matrices:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Use Pre-processed Signatures"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Proceed to the ",(0,i.jsx)(n.a,{href:"/docs/processed-signatures",children:"Processed Dataset"})," page to download and use pre-processed signature matrices."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Create Signatures from scRNA Data"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Follow the instructions on the ",(0,i.jsx)(n.a,{href:"/docs/create-signatures",children:"Create Signatures"})," page to generate signatures from single-cell RNA-seq data."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"accepted-input-formats",children:"Accepted Input Formats"}),"\n",(0,i.jsx)(n.h3,{id:"bulk-data",children:(0,i.jsx)(n.strong,{children:"Bulk Data"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Formats Accepted"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CSV"}),": Comma-separated values file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TSV"}),": Tab-separated values file."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Excel"}),": ",(0,i.jsx)(n.code,{children:".xlsx"})," or ",(0,i.jsx)(n.code,{children:".xls"})," files."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"R Data Files"}),": ",(0,i.jsx)(n.code,{children:".RData"})," or ",(0,i.jsx)(n.code,{children:".rds"})," files containing expression matrices."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Requirements"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Rows should represent genes, and columns should represent samples."}),"\n",(0,i.jsx)(n.li,{children:"Gene identifiers should be consistent across all datasets."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"single-cell-data-for-signature-creation",children:(0,i.jsx)(n.strong,{children:"Single-cell Data for Signature Creation"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Formats Accepted"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Seurat Object"}),": RDS files containing Seurat objects with counts and metadata."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SingleCellExperiment"}),": RDS files containing SingleCellExperiment objects."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Matrix Formats"}),": Sparse or dense matrices with accompanying metadata."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Text Files"}),": Counts matrices exported as CSV or TSV files with separate metadata files."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Requirements"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cell type annotations must be included in the metadata."}),"\n",(0,i.jsx)(n.li,{children:"Data should be preprocessed (e.g., quality control, normalization) before signature creation."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"model-hyperparameters",children:"Model Hyperparameters"}),"\n",(0,i.jsxs)(n.p,{children:["Additional parameters for fine-tuning the ",(0,i.jsx)(n.strong,{children:"OncoBLADE"})," model:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ind_Marker"}),": Index for marker genes."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": A logical vector ",(0,i.jsx)(n.code,{children:"[True] * Ngene"})," (all genes used without filtering)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": Genes with ",(0,i.jsx)(n.code,{children:"False"})," are excluded in the first phase (Empirical Bayes) for finding the best hyperparameters."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ind_sample"}),": Index for the samples used in the first phase (Empirical Bayes)."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": A logical vector ",(0,i.jsx)(n.code,{children:"[True] * Nsample"})," (all samples used)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Alpha"}),", ",(0,i.jsx)(n.strong,{children:"Alpha0"}),", ",(0,i.jsx)(n.strong,{children:"Kappa0"}),", ",(0,i.jsx)(n.strong,{children:"sY"}),": Hyperparameters used in the model."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Alpha"}),": Optimized during the model run."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Defaults"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Alpha = 1"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Alpha0 = 0.1"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Kappa0 = 1"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"sY = 1"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"IterMax"}),": Maximum number of iterations between variational parameter optimization by L-BFGS and updating hyperparameter Alpha."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"IterMax = 100"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Nrep"}),": Number of random initial guesses used to run ",(0,i.jsx)(n.strong,{children:"OncoBLADE"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Usage"}),": The best result in terms of the ELBO function will be chosen among the local optima."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"Nrep = 3"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Njob"}),": Number of jobs executed in parallel."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Default"}),": ",(0,i.jsx)(n.code,{children:"Njob = 10"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Next Steps:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If you have pre-processed signatures, proceed to the ",(0,i.jsx)(n.a,{href:"processed-signatures",children:"Processed Signatures"})," page."]}),"\n",(0,i.jsxs)(n.li,{children:["To create signatures from your own scRNA-seq data, visit the ",(0,i.jsx)(n.a,{href:"create-signatures",children:"Create Signatures"})," page."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Placeholder Notes:"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(6540);const i={},l=r.createContext(i);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);